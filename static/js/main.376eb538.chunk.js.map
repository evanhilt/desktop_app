{"version":3,"sources":["logo.svg","images/arrow.svg","images/sunny.svg","images/partly_cloudy.svg","images/cloudy.svg","images/rain.svg","images/sleet.svg","images/snow.svg","images/hail.svg","images/none.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","temp","cloudCover","precipitation","wind","submit","newTemp","setState","newWind","newCloudCover","newPrecipitation","boolVal","window","location","reload","_this2","react_default","a","createElement","className","href","id","src","require","App_TemperatureBox","onTempChange","onChangeTemp","bind","App_CloudBox","onCloudCoverChange","onChangeCloudCover","App_PrecipBox","onPrecipitationChange","onChangePrecipitation","App_WindBox","onWindChange","onChangeWind","App_FindBox","onSubmitChange","onChangeSubmit","ref","onSubmit","handleReset","type","Component","TemperatureBox","_this3","event","target","value","console","log","min","max","onChange","handleChange","CloudBox","_this4","selectedCloudCover","name","for","PrecipBox","_this5","selectedPrecipitation","WindBox","_this6","FindBox","_this7","finalTemp","finalCloud","finalPrecip","finalWind","message","handleSubmit","assertThisInitialized","_this8","Boolean","hostname","match","WebFont","load","google","families","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.376eb538.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.2ba01b63.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunny.3069df4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly_cloudy.fac1f0db.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.41dc88e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.106a30f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/sleet.9470a13b.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.64f133df.svg\";","module.exports = __webpack_public_path__ + \"static/media/hail.70b75120.svg\";","module.exports = __webpack_public_path__ + \"static/media/none.23a912b0.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      temp: 30,\n      cloudCover: '',\n      precipitation: '',\n      wind: 0,\n      submit: false\n    }\n  }\n\n  onChangeTemp(newTemp) {\n    this.setState({\n      temp: newTemp\n    });\n  }\n\n  onChangeWind(newWind) {\n    this.setState({\n      wind: newWind\n    });\n  }\n\n  onChangeCloudCover(newCloudCover) {\n    this.setState({\n      cloudCover: newCloudCover\n    });\n  }\n\n  onChangePrecipitation(newPrecipitation) {\n    this.setState({\n      precipitation: newPrecipitation\n    });\n  }\n\n  onChangeSubmit(boolVal) {\n    this.setState({\n      submit: boolVal\n    });\n  }\n\n  handleReset() {\n    this.setState({\n      temp: 30,\n      cloudCover: '',\n      precipitation: '',\n      wind: 0,\n      submit: false\n    });\n    window.location = \"#Home\";\n    window.location.reload();\n  }\n\n  render() {\n    return(\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <a href=\"#Home\" className=\"headerText WeatherFinder\">Weather Finder</a>\n          <div className=\"tabs\">\n            <a href=\"#Temperature\" className=\"headerText Categories\">Temperature</a>\n            <a href=\"#CloudCover\" className=\"headerText Categories\">Cloud Cover</a>\n            <a href=\"#Precipitation\" className=\"headerText Categories\">Precipitation</a>\n            <a href=\"#Wind\" className=\"headerText Categories\">Wind</a>\n            <a href=\"#Find\" className=\"headerText Categories\">Find</a>\n          </div>\n        </header>\n        <body>\n          <div id=\"Home\" className=\"App-section home\">\n            <p className=\"logoText\">Weather Finder</p>\n            <p className=\"bigText descriptonText\">Describe the weather you want and find\n            locations!</p>\n            <img className=\"icons arrowIcon\" src={require('./images/arrow.svg')} />\n          </div>\n          <div id=\"Temperature\" className=\"App-section temperature\">\n            <p className=\"bigText\">Temperature</p>\n            <TemperatureBox\n              temp={this.state.temp}\n              onTempChange={this.onChangeTemp.bind(this)}\n            />\n          </div>\n          <div id=\"CloudCover\" className=\"App-section cloudCover\">\n            <p className=\"cloudText bigText\">Cloud Cover</p>\n            <CloudBox\n              cloudCover={this.state.cloudCover}\n              onCloudCoverChange={this.onChangeCloudCover.bind(this)}\n            />\n          </div>\n          <div id=\"Precipitation\" className=\"App-section precipitation\">\n            <p className=\"bigText precipitationText\">Precipitation</p>\n            <PrecipBox\n              precipitation={this.state.precipitation}\n              onPrecipitationChange={this.onChangePrecipitation.bind(this)}\n            />\n          </div>\n          <div id=\"Wind\" className=\"App-section wind\">\n            <p className=\"bigText\">Wind</p>\n            <WindBox\n              wind={this.state.wind}\n              onWindChange={this.onChangeWind.bind(this)}\n            />\n          </div>\n          <div id=\"Find\" className=\"App-Section home extendingSection\">\n            {(() => {\n              if(this.state.submit == false) {\n                return(<p className=\"bigText\">Find locations with this weather</p>)\n              } else {\n                return(<p className=\"bigText\">Results</p>)\n              }\n            })()}\n            <FindBox\n              temp={this.state.temp}\n              cloudCover={this.state.cloudCover}\n              precipitation={this.state.precipitation}\n              wind={this.state.wind}\n              submit={this.state.submit}\n              onSubmitChange={this.onChangeSubmit.bind(this)}\n            />\n            {(() => {\n              if(this.state.submit == true) {\n                return(\n                  <div className=\"cloudContainer weather\">\n                    <form ref=\"form\" onSubmit={this.handleReset.bind(this)}>\n                      <button\n                        type=\"submit\"\n                        id=\"reset\"\n                        className=\"button\">\n                        Reset\n                      </button>\n                    </form>\n                  </div>\n                )\n              }\n            })()}\n          </div>\n        </body>\n      </div>\n    );\n  }\n}\n\nclass TemperatureBox extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      temp: this.props.temp\n    }\n  }\n  handleChange(event) {\n    this.props.onTempChange(event.target.value);\n    console.log(\"TempChanged\");\n  }\n  render() {\n    return(\n      <div className=\"cloudContainer windTempSelect\">\n        <input\n          type=\"range\"\n          className=\"slider tempSlider\"\n          min=\"-65\"\n          max=\"125\"\n          id=\"tempSlider\"\n          value={this.props.temp}\n          onChange={this.handleChange.bind(this)}>\n        </input>\n        <p className=\"bigText windTempText\">{this.props.temp + \"° F\"}</p>\n      </div>\n    );\n  }\n}\n\nclass CloudBox extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedCloudCover: this.props.cloudCover,\n    };\n  }\n  handleChange(event) {\n    this.props.onCloudCoverChange(event.target.value);\n  }\n  render() {\n    return(\n      <div className=\"cloudContainer cloudCoverSelect\">\n        <img className=\"icons\" src={require('./images/sunny.svg')} />\n        <img className=\"icons cloudIcons\" src={require('./images/partly_cloudy.svg')} />\n        <img className=\"icons cloudIcons\" src={require('./images/cloudy.svg')} />\n        <div className=\"emptyDiv\"></div>\n        <div className=\"radio-toolbar cloudRadio\">\n          <input\n            type=\"radio\"\n            id=\"radioSunny\"\n            name=\"radio\"\n            value=\"Sunny\"\n            onChange={this.handleChange.bind(this)}/>\n          <label for=\"radioSunny\">Sunny</label>\n          <input\n            type=\"radio\"\n            id=\"radioPartlyCloudy\"\n            name=\"radio\"\n            value=\"Partly Cloudy\"\n            onChange={this.handleChange.bind(this)}/>\n          <label for=\"radioPartlyCloudy\">Partly Cloudy</label>\n          <input\n            type=\"radio\"\n            id=\"radioCloudy\"\n            name=\"radio\"\n            value=\"Cloudy\"\n            onChange={this.handleChange.bind(this)}/>\n          <label for=\"radioCloudy\">Cloudy</label>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass PrecipBox extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedPrecipitation: \"\"\n    };\n  }\n  handleChange(event) {\n    this.props.onPrecipitationChange(event.target.value);\n  }\n  render() {\n    return(\n      <div className=\"cloudContainer cloudCoverSelect precipitationSelect\">\n        <img className=\"icons_small\" src={require('./images/rain.svg')} />\n        <img className=\"icons_small\" src={require('./images/sleet.svg')} />\n        <img className=\"icons_small\" src={require('./images/snow.svg')} />\n        <img className=\"icons_small\" src={require('./images/hail.svg')} />\n        <img className=\"icons_small\" src={require('./images/none.svg')} />\n        <div className=\"emptyDiv\"></div>\n        <div id=\"toolbar\" className=\"radio-toolbar precipRadio\">\n          <input\n            type=\"radio\"\n            id=\"radioRain\"\n            name=\"radio\"\n            value=\"Rain\"\n            onChange={this.handleChange.bind(this)}/>\n          <label for=\"radioRain\">Rain</label>\n          <input\n            type=\"radio\"\n            id=\"radioSleet\"\n            name=\"radio\"\n            value=\"Sleet\"\n            onChange={this.handleChange.bind(this)}/>\n          <label for=\"radioSleet\">Sleet</label>\n          <input\n            type=\"radio\"\n            id=\"radioSnow\"\n            name=\"radio\"\n            value=\"Snow\"\n            onChange={this.handleChange.bind(this)}/>\n          <label for=\"radioSnow\">Snow</label>\n          <input\n            type=\"radio\"\n            id=\"radioHail\"\n            name=\"radio\"\n            value=\"Hail\"\n            onChange={this.handleChange.bind(this)}/>\n          <label for=\"radioHail\">Hail</label>\n          <input\n            type=\"radio\"\n            id=\"radioNone\"\n            name=\"radio\"\n            value=\"None\"\n            onChange={this.handleChange.bind(this)}/>\n          <label for=\"radioNone\">None</label>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass WindBox extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      wind: this.props.wind\n    }\n  }\n  handleChange(event) {\n    this.props.onWindChange(event.target.value);\n  }\n  render() {\n    return(\n      <div className=\"cloudContainer windTempSelect\">\n        <input\n          type=\"range\"\n          className=\"slider windSlider\"\n          min=\"0\"\n          max=\"200\"\n          id=\"tempSlider\"\n          value={this.props.wind}\n          onChange={this.handleChange.bind(this)}>\n        </input>\n        <p className=\"bigText windTempText\">{this.props.wind + \" mph\"}</p>\n      </div>\n    );\n  }\n}\n\nclass FindBox extends Component {\n  constructor(props) {\n    super(props)\n    this.finalTemp = ''\n    this.finalCloud = ''\n    this.finalPrecip = ''\n    this.finalWind = ''\n    this.state = {\n      message: ''\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    var message = \"\";\n    if (this.props.cloudCover == '' || this.props.precipitation == '') {\n      message = \"Fill all fields before submitting\";\n      window.location = \"#Find\"\n    } else {\n      this.finalTemp = this.props.temp;\n      this.finalCloud = this.props.cloudCover;\n      this.finalPrecip = this.props.precipitation;\n      this.finalWind = this.props.wind;\n      this.props.onSubmitChange(true);\n    }\n    this.setState({\n      message: message\n    });\n  }\n\n  render() {\n    return(\n      <div className=\"cloudContainer weather\">\n        {(() => {\n          if(this.props.submit == false) {\n            return(\n              <div>\n                <p className=\"weather-text\">{\"Temperature: \" + this.props.temp}</p>\n                <p className=\"weather-text\">{\"CloudCover: \" + this.props.cloudCover}</p>\n                <p className=\"weather-text\">{\"Precipitation: \" + this.props.precipitation}</p>\n                <p className=\"weather-text\">{\"Wind Speed: \" + this.props.wind}</p>\n                <p className=\"message-text\">{this.state.message}</p>\n                <form ref=\"form\" onSubmit={this.handleSubmit}>\n                  <button\n                    type=\"submit\"\n                    id=\"submitWeather\"\n                    className=\"button\">\n                    Submit\n                  </button>\n                </form>\n              </div>\n            )\n          } else {\n            return(\n              <div>\n                <p className=\"weather-text\">{\"Temperature: \" + this.finalTemp}</p>\n                <p className=\"weather-text\">{\"CloudCover: \" + this.finalCloud}</p>\n                <p className=\"weather-text\">{\"Precipitation: \" + this.finalPrecip}</p>\n                <p className=\"weather-text\">{\"Wind Speed: \" + this.finalWind}</p>\n                <p className=\"message-text\">{this.state.message}</p>\n                <p className=\"bigText\">Locations:</p>\n                <div className=\"results\">\n                  <p className=\"weather-text\">Provo Utah, USA</p>\n                  <p className=\"weather-text\">Salt Lake City Utah, USA</p>\n                  <p className=\"weather-text\">Wichita Kansas, USA</p>\n                  <p className=\"weather-text\">Memphis Tennessee, USA</p>\n                  <p className=\"weather-text\">Taos New Mexico, USA</p>\n                  <p className=\"weather-text\">Buenos Aires, Argentina</p>\n                </div>\n              </div>\n            )\n          }\n        })()}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\nWebFont.load({\ngoogle: {\n  families: ['Pacifico', 'Oswald']\n}});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}